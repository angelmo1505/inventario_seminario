plugins {
	id 'java'
	id "jacoco"
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "6.0.1.5171"
}

group = 'co.edu.uniajc'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
	runtimeOnly 'org.postgresql:postgresql'

	// Junit
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

	// Mockito
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.mockito:mockito-junit-jupiter'
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.40 // 80% coverage
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.11"
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
    reports {
        xml.required.set(true) 
        html.required.set(true)
        csv.required.set(false)
    }

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'co/edu/uniajc/inventario_seminarioApplication.*',
					'co/edu/uniajc/model/**',
					'co/edu/uniajc/repository/**',
					'co/edu/uniajc/exception/**',
					'co/edu/uniajc/controller/**',
			])
		}))
	}
}

plugins.withType(JacocoPlugin).configureEach {
	test.finalizedBy 'jacocoTestReport'
}

sonarqube {
    properties {
        property "sonar.projectKey", "angelmo1505_inventario_seminario"
        property "sonar.organization", "angelmo1505"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.sources", "src/main"
		property "sonar.tests", "src/test"
		property "sonar.exclusions", "**/resources/**"
		property "sonar.coverage.exclusions", "**/model/**, **/controller/**, **/exception/**, **/repository/**, **/test/**, **/SeminarioApplication.*"
		property "sonar.java.binaries", "build/classes/java/main"
    }
}